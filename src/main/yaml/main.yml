# Define the incarnation of the simulation
incarnation: scafi
# Define the launcher, standard one
launcher: { parameters: { batch: [], autoStart: false } }
# Attach the GUI to the simulator
monitors: { type: SwingGUI, parameters: { graphics: src/main/resources/effect.json } }

# Define how the nodes are connected, in this case within a distance of 350 units
network-model: { type: ConnectWithinDistance, parameters: [350] }
# Define the behaviour of the nodes
_reactions:
  - program: &program # MacroSwarm program, executed every second
      - time-distribution: 1
        type: Event
        actions:
          - type: RunScafiProgram
            parameters: [example.SimpleMovement, 1.0]
      - program: send
  - move: &move # Related actuation, executed every second
      - time-distribution: 1
        type: Event
        actions: { type: MoveToTarget, parameters: [ destination, 10 ] }
# Define how to deploy the program, in this case in a grid
# which starts from (-500, -500) and ends in (500, 500) with a step of (300, 300).
# 25 is the variance of the position of the nodes in the grid (randomness).
# The program is deployed in a 4x4 grid.
deployments:
  type: Grid
  parameters: [-500, -500, 500, 500, 300, 300, 25, 25]
  programs: [ *program, *move ] # Add the behaviour